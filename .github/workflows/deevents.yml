name: Esegui deevents.py ogni 2 ore

on:
  schedule:
    - cron: '57 */1 * * *'  # Esegue ogni 2 ore
  workflow_dispatch:  # Permette di eseguire manualmente

permissions:
  contents: write  # Permette di fare commit e push nel repository

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repository
        uses: actions/checkout@v4

      - name: Imposta Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Sostituisci con la versione necessaria

      - name: Installa le dipendenze
        run: pip install requests python-dateutil  selenium webdriver-manager pillow

      - name: Esegui lo script
        run: python deevents.py

      - name: Verifica se eventi.m3u è stato generato
        run: |
          if [ -f "deevents.m3u" ]; then
            echo "Il file deevents.m3u è stato generato."
          else
            echo "Il file deevents.m3u non esiste. Esco."
            exit 0  # Esci senza fare commit o push
          fi

      - name: Configura Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Stash delle modifiche locali (se presenti)
        run: |
          git diff --quiet || git stash

      - name: Scarica le ultime modifiche dal repository remoto
        run: git pull --rebase origin main

      - name: Ripristina le modifiche stashed (se presenti)
        run: |
          git stash list | grep -q "stash@{0}" && git stash pop || echo "Nessuna modifica da ripristinare"

      - name: Aggiungi il file generato al commit
        run: |
          git add .
          git commit -m "Aggiungi file generato channels_italy" || echo "Nessuna modifica da commitare"

      - name: Pusha il cambiamento
        run: git push
